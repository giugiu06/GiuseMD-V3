import '@whiskeysockets/baileys'; // Importa le dipendenze necessarie per Baileys
import fetch from 'node-fetch';    // Necessario per scaricare la thumbnail

// --- CONFIGURAZIONE SIMBOLI E PAGAMENTI ---
const SLOTS = [
    'üçí', 'üçã', 'üçä', 'üçá', 'üîî', 'üíé', 'üçÄ'
];

// Percentuali di vincita per combinazione (es. 3 simboli uguali, 2 simboli uguali)
// Moltiplicatore della puntata
const PAYOUTS = {
    'triple': { // Tre simboli uguali
        'üçí': 20,
        'üçã': 20,
        'üçä': 20,
        'üçá': 25,
        'üîî': 30,
        'üíé': 60,
        'üçÄ': 200 // Jackpot!
    },
    'double': { // Due simboli uguali (solo i primi due o gli ultimi due)
        'üçí': 4,
        'üçã': 4,
        'üçä': 4,
        'üçá': 6,
        'üîî': 8,
        'üíé': 10,
        'üçÄ': 20
    }
};

// --- HANDLER DEL COMANDO .slot ---
let handler = async (m, { conn, text, usedPrefix }) => {
    const senderId = m.sender;
    const chatId = m.chat;
    const betAmount = parseInt(text);

    // --- GESTIONE SALDO UTENTE TRAMITE global.slotDb ---
    // Assicurati che global.slotDb sia stato inizializzato dal modulo lib/slotDB.js
    if (typeof global.slotDb === 'undefined' || typeof global.slotDb.data === 'undefined' || typeof global.slotDb.data.users === 'undefined') {
        console.error("ERRORE: global.slotDb non √® configurato. Assicurati che lib/slotDB.js sia importato.");
        return conn.reply(chatId, `‚ùå Errore interno del bot: sistema slot non configurato. Contatta l'amministratore.`, m);
    }

    // Inizializza l'utente nel database slot se non esiste
    if (typeof global.slotDb.data.users[senderId] === 'undefined') {
        global.slotDb.data.users[senderId] = {};
    }
    // Inizializza il saldo dell'utente a 250 se non esiste o √® null/undefined
    if (typeof global.slotDb.data.users[senderId].money === 'undefined' || global.slotDb.data.users[senderId].money === null) {
        global.slotDb.data.users[senderId].money = 250; 
        console.log(`[SLOT] Saldo di ${senderId} inizializzato a 250 in slotdata.json.`);
    }

    let userMoney = global.slotDb.data.users[senderId].money;
    console.log(`[SLOT] Saldo di ${senderId} prima della giocata: ${userMoney}`); // LOG per debug

    if (isNaN(betAmount) || betAmount <= 0) {
        return conn.reply(chatId, `üé∞ *SLOT MACHINE* üé∞
Per giocare, scommetti una quantit√† di denaro.
Esempio: \`${usedPrefix}slot 100\` (per scommettere 100).
Il tuo saldo attuale: ${userMoney}‚Ç¨`, m); // Aggiunto ‚Ç¨
    }

    if (betAmount > userMoney) {
        return conn.reply(chatId, `üí∞ Non hai abbastanza denaro! Il tuo saldo attuale √® ${userMoney}‚Ç¨.`, m); // Aggiunto ‚Ç¨
    }
    
    if (betAmount < 10) { // Esempio: puntata minima
        return conn.reply(chatId, `üìâ La puntata minima √® 10‚Ç¨.`, m); // Aggiunto ‚Ç¨
    }

    try {
        // --- DEDUCO LA PUNTATA ---
        global.slotDb.data.users[senderId].money -= betAmount; // Deduci la puntata dal saldo reale

        // --- GIRA I RULLI ---
        const reel1 = SLOTS[Math.floor(Math.random() * SLOTS.length)];
        const reel2 = SLOTS[Math.floor(Math.random() * SLOTS.length)];
        const reel3 = SLOTS[Math.floor(Math.random() * SLOTS.length)];

        const result = [reel1, reel2, reel3];
        const resultDisplay = `${reel1} | ${reel2} | ${reel3}`;

        let winAmount = 0;
        let message = `üé∞ *RISULTATO SLOT MACHINE* üé∞\n\n${resultDisplay}\n\n`;

        // --- CONTROLLA LE VINCITE ---
        if (reel1 === reel2 && reel2 === reel3) {
            // Tre simboli uguali
            winAmount = betAmount * PAYOUTS.triple[reel1];
            message += `üéâ *JACKPOT!* üéâ Hai ottenuto 3 ${reel1} e hai vinto ${winAmount}‚Ç¨!\n`; // Aggiunto ‚Ç¨
        } else if (reel1 === reel2 || reel2 === reel3) {
            // Due simboli uguali (controlla solo il primo o il secondo per semplicit√†)
            const symbol = (reel1 === reel2) ? reel1 : reel3; // Prende il simbolo che si ripete
            winAmount = betAmount * PAYOUTS.double[symbol];
            message += `ü•≥ *COMPLIMENTI!* ü•≥ Hai ottenuto 2 ${symbol} e hai vinto ${winAmount}‚Ç¨!\n`; // Aggiunto ‚Ç¨
        } else {
            // Nessuna vincita
            message += `üò≠ *Spiacente!* üò≠ Nessuna combinazione vincente. Hai perso ${betAmount}‚Ç¨.\n`; // Aggiunto ‚Ç¨
        }

        // --- AGGIORNA IL SALDO ---
        global.slotDb.data.users[senderId].money += winAmount; // Aggiungi la vincita al saldo reale
        console.log(`[SLOT] Saldo di ${senderId} dopo la vincita/perdita: ${global.slotDb.data.users[senderId].money}`); // LOG per debug

        message += `\nIl tuo nuovo saldo: ${global.slotDb.data.users[senderId].money}‚Ç¨`; // Aggiunto ‚Ç¨

        // --- PREPARA E INVIA IL MESSAGGIO CON EMBED E MOSTRA CANALE ---
        const thumbnailUrl = "https://i.ibb.co/7xFKwN46/Senza-titolo-14-20250716125942.png"; // Immagine per l'embed
        let thumbnailBuffer;
        try {
            thumbnailBuffer = await (await fetch(thumbnailUrl)).buffer();
        } catch (e) {
            console.error("Errore nel download della thumbnail:", e);
            thumbnailBuffer = Buffer.from('');
        }

        await conn.sendMessage(chatId, {
            text: message.trim(),
            contextInfo: {
                forwardingScore: 1,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363419284785624@newsletter', // Sostituisci con il tuo JID newsletter
                    serverMessageId: '',
                    newsletterName: "GiuseMD-V3 ‚Üí Slot Machine" // Nome del canale/newsletter
                },
                externalAdReply: { // L'embed visivo
                    title: `üé∞ Slot Machine - Gioca Ora!`,
                    body: `Fai girare i rulli e tenta la fortuna!`,
                    mediaType: 1,
                    renderLargerThumbnail: false,
                    previewType: "PHOTO",
                    thumbnail: thumbnailBuffer,
                    sourceUrl: 'https://wa.me/' + conn.user.jid.split('@')[0] // Link del bot
                }
            }
        }, { quoted: m }); // Quota il messaggio originale per un contesto
        
    } catch (error) {
        console.error("Errore nel comando .slot:", error);
        conn.reply(chatId, `‚ùå Si √® verificato un errore durante l'esecuzione della slot machine. Riprova pi√π tardi.`, m);
    }
};

handler.help = ['slot <amount>'];
handler.tags = ['games'];
handler.command = /^(slot)$/i;

export default handler;